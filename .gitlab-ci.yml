image: tico/docker

variables:
    TARGET_PATH: /root/app
    IMAGE_APP: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    DOCKER_DRIVER: overlay

cache:
    paths:
    - .php_cs.cache
    - app/vendor

services:
    - docker:dind

stages:
    - test
    - build
    - deploy

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

.deploy: &deploy
  script:
    - cibu prepare-ssh
    - cibu compose login gitlab-ci-token $CI_JOB_TOKEN $CI_REGISTRY
    - cibu compose upload $CI_ENVIRONMENT_SLUG
    - cibu compose pull
    - cibu compose update app
    - cibu compose up -d --no-deps --no-recreate
    - cibu compose cleanup

.tags: &tags
  tags:
    - docker


codestyle:
    stage: test
    script:
      - docker run -v `pwd`:/app rakshazi/php-cs-fixer fix --dry-run --diff
    <<: *tags

unit:
    stage: test
    script:
      - docker run -i -v `pwd`:/app composer update --no-dev --ignore-platform-reqs --no-interaction --no-progress -a -d /app
      - docker-compose up -d
      - sleep 30
      - docker-compose exec -T app phinx migrate || true
      - docker-compose exec -T app phinx seed:run || true
      - docker-compose run phpunit
    <<: *tags

build:
    stage: build
    only:
        - master
        - develop
    script:
        - docker run -i -v `pwd`:/app composer update --no-dev --ignore-platform-reqs --no-interaction --no-progress -a -d /app
        - docker build -t $IMAGE_APP .
        - docker push $IMAGE_APP
    <<: *tags

build_swagger:
    stage: build
    only:
        - master
        - develop
    script:
        - docker run -v `pwd`:/app -i rakshazi/swagger-php app/src
        - docker build -f Dockerfile.swaggerui -t $IMAGE_SWAGGER .
        - docker push $IMAGE_SWAGGER
    <<: *tags

deploy_staging:
    stage: deploy
    only:
        - develop
    environment:
      name: qa
      url: https://qa.example.com
    variables:
      TARGET_HOST: root@qa.example.com
    <<: *deploy
    <<: *tags

deploy_production:
    stage: deploy
    only:
        - master
    environment:
      name: prod
      url: https://example.com
    variables:
      TARGET_HOST: root@example.com
    <<: *deploy
    <<: *tags
