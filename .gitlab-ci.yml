image: docker:latest

variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    DOCKER_DRIVER: overlay
    HOST_PRODUCTION: user@host
    APP_DIR: /usr/app
    UPGRADE: "docker-compose pull --parallel --quiet && docker-compose rm -f -s -v app && docker-compose up -d --force-recreate --remove-orphans --no-deps app && docker-compose up -d --no-recreate "

services:
    - docker:dind

stages:
    - test
    - build
    - deploy

test_codestyle:
    stage: test
    script:
        - docker run -v `pwd`:/app rakshazi/php-cs-fixer fix --dry-run --diff

test_unit:
    stage: test
    before_script:
        - apk --no-cache add py-pip
        - pip install docker-compose==1.12.0
        - docker-compose run update
    script:
        - docker-compose up -d
        - sleep 30
        - docker-compose exec -T app phinx migrate || true
        - docker-compose exec -T app phinx seed:run || true
        - docker-compose run phpunit
    tags:
        - docker

build:
    stage: build
    only:
        - master
        - develop
    before_script:
        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        - apk --no-cache add py-pip
        - pip install docker-compose==1.12.0
        - docker-compose run update
    script:
        - docker build --force-rm --no-cache --pull -t $IMAGE_TAG .
        - docker push $IMAGE_TAG
    tags:
        - docker

deploy_production:
    stage: deploy
    environment:
        name: staging
        url: http://tisuit.titanium.codes
    only:
        - master
    before_script:
        - mkdir -p ~/.ssh
        - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
        - apk --no-cache add openssh-client curl
        - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa
        - eval $(ssh-agent -s)
        - ssh-add
    script:
        - ssh $HOST_PRODUCTION docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        - ssh $HOST_PRODUCTION docker pull $IMAGE_TAG
        - scp docker-compose-prod.yml $HOST_PRODUCTION:$APP_DIR/docker-compose.yml
        - ssh $HOST_PRODUCTION "cd $APP_DIR; $UPGRADE"
    after_script:
        - ssh $HOST_PRODUCTION docker system prune -a -f
        - rm -rf ~/.ssh
